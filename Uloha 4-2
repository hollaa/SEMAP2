// uloha4-2.c -- Alica Hollá, 24.11.2020 16:24

#include <stdio.h>

long double fact(int n){
    if (n>=1)
        return n*fact(n-1);
    else
        return 1;
}
long double catalanNumber(int n) //zdroj: https://www.baeldung.com/cs/calculate-number-different-bst
{
    double citatel = fact(2*n);
    double menovatel = fact(n+1) * fact(n);
    return citatel / menovatel;

}
int main()
{
    int vstup;
    double vystup;

    while(scanf("%d", &vstup) > 0){
        if(vstup > 32 || vstup < 0)
            return 0;
        else{
           vystup = catalanNumber(vstup);
           printf("%.lf\n", vystup);
        }
    }

    return 0;
}

//**
Jakubko sa nudí na hodine programovania a tak si začal na papier čmárať binárne vyhľadávacie stromy. Zapačíli sa mu a chcel by zistiť koľko rôznych binárnych vyhľadávacích stromov existuje pre daný počet prvkov. Napíšte program, ktorý pre daný počet prvkov N zistí, koľko je rôznych binárnych vyhľadávacích stromov, ktoré možno z N rôznych prvkov zostrojiť.

Špecifikácia vstupu: Na vstupe je niekoľko čísel veľkosťou do 32. Čísla sú oddelené medzerou alebo novým riadkom.

Špecifikácia výstupu: Pre každé číslo i na vstupe vypíšte jedno číslo -- počet rôznych binárnych vyhľadávacích stromov, ktoré možno zostrojiť z i rôznych prvkov.

Ukážka vstupu:
1
2
3
Výstup pre ukážkový vstup:
1
2
5
**//
